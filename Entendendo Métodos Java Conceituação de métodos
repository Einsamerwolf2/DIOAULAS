Metodo
  é uma porção de codigo (sub-rotina) que é disponibilizada por uma classe. Este é executado quando é feita uma requisao a ele. Sao responsaveis por defenir e realizar um determinado comportamento.
  
padrao de definicao:
    <?visibilidade?><?tipo?><?modificador?> retorno
    nome (<?parametros?>) <?excecoes?> corpo
    
Onde:
    V: "public", "protected" ou "private"
    T: concreto ou abstrato
    M "static" ou "final"
    R: tipo de dado ou "void"
    N: nome que é fornecido ao metodo
    P: parametros que pode receber
    E: excecoes que pode lançar
    C: codigo que possui ou vazio
    
    
Exemplos:
      public String getNome() {..."aqui vem o corpo"}
      public double calcularTotalNota() {....}
      public int verificarDistancia(int cordenada1, int cordenada2) {...}
      public abstract void executar();
      public void alterarFabricante(Fabricante fabricante) {...}
      public Relatorio gerarDadosAnaliticos(Cliente cliente);
      List<Compra> compras) {...}
      
      
      public static R N(P) {....}
      
Utilizacao:
Passa-se uma mensagem atraves de uma classe ou objecto.
nome_da_classe.nome_do_metodo(); ou nome_da_classe.nome_do_metodo(...);
nome_do_objeto.nome_do_metodo(); ou nome_do_objeto.nome_do_metodo(...);

Math.random(); ou Math.sqrt(4);

usuario.getEmail(); ou usuario.alterarEndereco(endereco);

NB: O que diferencia as classes de um objectos, é que as classes sempre a primeira letra é maiuscula e no objeto é minuscula.

Particularidades:

    Assinatura: éa  forma de identificar unicamente o metodo
        Ass =  nome + parametros
        
        metodo:
        public double calcularTotalVenda (double precoItem1, double precoitem2, double precoItem3) {....}
        
        Assinatura:
        calcularTotalVenda (double precoItem1, double precoitem2, double precoItem3) 


      Construtor e Destrutor: sao metodos especiais usados na Orientacao a Objetos(OO).
      
      Mensaem: é o ato de solicitar ao metodo que o mesmo execute. Esta pode ser direcionada a um objecto ou uma classe.
      
      Passgem de parametros:
          Por valor(copia)
          por referenvia (endereco)
          
exemplo por valor (copia):
    int i = 10;
    public void fazerAlgo(int i) {
        
        i = i + 10;
        System.out.println("valor de i dentro: " + i);
        
    }
    System.out.println("Valor de i fora: " + i);
    
    
Boas praticas
    Nomes devem ser descritivos, mas curots
    Notacao camelo
  verificarSaldo(); executartransferencia(...); existeDebito();
    Deve possuir entr 80e 120 linhas
    Evite lista de paramentros longas
    Visibilidades adequadas 
    
    
                        EXECERCIRANDO
Cria uma aplicacao que resolva as seguintes situações:
    * Cacule as 4 operações basicas: soma, subtração, multiplicação e divisao. Sempre 2 valores devem ser passados.
    * A partir da hora do dia, informe a mensagem adequada: bom dia , boa tarde ou boa noite.
    * Calcule o valor final de um emprestimo, a partir do valor solicitado. Taxas e parcelas influencia,. 
    * Defina arbitrariamente as faixas que influenciam nos valores.
    
    
Observacoes:
    tente ao maximo criar metodos que trabalhem sozinhos ou em conjunto
    Pode chamar um metodo dentro de outro 
    Pode passar como parametrso , a chamando de um outro metodo
    
    
    
  MAIN  
package one.digitalinnovation.basecamp;

/**
 * Classe principal dos exercícios da Aula 1 de Métodos.
 */
public class Main {

    public static void main(String[] args) {

        // Calculadora
        System.out.println("Exercício calculadora");
        Calculadora.soma(3, 6);
        Calculadora.subtracao(9, 1.8);
        Calculadora.multiplicacao(7, 8);
        Calculadora.divisao(5, 2.5);

        // Mensagem
        System.out.println("Exercício mensagem");
        Mensagem.obterMensagem(9);
        Mensagem.obterMensagem(14);
        Mensagem.obterMensagem(1);

        // Empréstimo
        System.out.println("Exercício empréstimo");
        Emprestimo.calcular(1000, Emprestimo.getDuasParcelas());
        Emprestimo.calcular(1000, Emprestimo.getTresParcelas());
        Emprestimo.calcular(1000, 5);

    }
}

MENSAGEM
package one.digitalinnovation.basecamp;

/**
 * Classe de exemplo para o exercício da Aula 1 de Métodos.
 */
public class Mensagem {


    public static void obterMensagem(int hora) {

        switch (hora) {
            case 5:
            case 6:
            case 7:
            case 8:
            case 9:
            case 10:
            case 11:
            case 12:
                mensagemBomDia();
                break;
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
                mensagemBoaTarde();
                break;
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 23:
            case 0:
            case 1:
            case 2:
            case 3:
            case 4:
                mensagemBoaNoite();
                break;
            default:
                System.out.println("Hora inválida.");
                break;
        }
    }

    public static void mensagemBomDia() {
        System.out.println("Bom dia!");
    }

    public static void mensagemBoaTarde() {
        System.out.println("Bom tarde!");
    }

    public static void mensagemBoaNoite() {
        System.out.println("Bom noite!");
    }

}

EMPRESTIMO 
package one.digitalinnovation.basecamp;

/**
 * Classe de exemplo para o exercício da Aula 1 de Métodos.
 */
public class Emprestimo {

    public static int getDuasParcelas() {
        return 2;
    }

    public static int getTresParcelas() {

        return 3;
    }

    public static double getTaxaDuasParcelas() {

        return 0.3;
    }

    public static double getTaxaTresParcelas() {

        return 0.45;
    }

    public static void calcular(double valor, int parcelas) {

        if (parcelas == 2) {

            double valorFinal = valor + (valor * getTaxaDuasParcelas());

            System.out.println("Valor final do empréstimo para 2 parcelas: R$ " + valorFinal);
        } else if (parcelas == 3) {

            double valorFinal = valor + (valor * getTaxaTresParcelas());

            System.out.println("Valor final do empréstimo para 3 parcelas: R$ " + valorFinal);
        } else {
            System.out.println("Quantidade de parcelas não aceita.");
        }

    }

}

CALCULADORA
package one.digitalinnovation.basecamp;

/**
 * Classe de exemplo para o exercício da Aula 1 de Métodos.
 */
public class Calculadora {

    public static void soma(double numero1, double numero2) {

        double resultado = numero1 + numero2;

        System.out.println("A soma de " + numero1 + " mais " + numero2 + " é " + resultado);
    }

    public static void subtracao(double numero1, double numero2) {

        double resultado = numero1 - numero2;

        System.out.println("A subtracao de " + numero1 + " menos " + numero2 + " é " + resultado);
    }

    public static void multiplicacao(double numero1, double numero2) {

        double resultado = numero1 * numero2;

        System.out.println("A multiplicação de " + numero1 + " vezes " + numero2 + " é " + resultado);
    }

    public static void  divisao(double numero1, double numero2) {

        double resultado = numero1 / numero2;

        System.out.println("A divisão de " + numero1 + " por " + numero2 + " é " + resultado);
    }

}
